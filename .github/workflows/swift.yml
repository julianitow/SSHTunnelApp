name: Swift

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  ARTIFACT_NAME: SSHTunneling.app.zip

jobs:
  build:
    runs-on: macos-13
    strategy:
      matrix:
        xcode:
          - ^15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install the Apple certificate and provisioning profile 
        uses: apple-actions/import-codesign-certs@v2
        with: 
          p12-file-base64: ${{ secrets.CERTIFICATE_P12 }}
          p12-password: ${{ secrets.PASSWORD_CERT }}
      - name: Build application
        uses: mxcl/xcodebuild@v2
        with:
          action: none
          xcode: ${{ matrix.xcode }}
      - run: xcodebuild -project SSHTunneling.xcodeproj -scheme SSHTunneling -destination platform=macOS build -configuration Release -derivedDataPath dist | xcpretty --color # NEED TO ZIP FILE TO PUBLISH ARTIFACT WORK
      - run: mv dist/Build/Products/Release/SSHTunneling.app ./ && zip -vr ${{ env.ARTIFACT_NAME }} SSHTunneling.app/
      - name: Upload artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_NAME }}

  release:
      runs-on: ubuntu-latest
      needs: build
      steps:
      - name: Download generated artifact
        id: download_artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME }}
      - name: Publish release
        id: publish_release
        uses: DasBen/release-on-push-action@master ## instead of official repo: rymndhng/release-on-push-action because of PR:https://github.com/rymndhng/release-on-push-action/pull/88
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          bump_version_scheme: patch
          release_name: reellize
          max_commits: 3
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.publish_release.outputs.upload_url }}
          asset_path: ${{steps.download_artifact.outputs.download-path}}/${{ env.ARTIFACT_NAME }}
          asset_name: ${{ env.ARTIFACT_NAME }}
          asset_content_type: application/zip